
include:
  - local: 'ci_cd/GitLab/Common.yml'
  - local: 'ci_cd/GitLab/Conan_Templates.yml'


.buildAndTest_rules:
  rules:
    - changes:
      - "*.cpp"
      - CMakeLists.txt
      - conanfile.py
      - examples/**/*
      - libs/**/*
      - .gitlab-ci.yml
      - ci_cd/GitLab/*
      - sonar-project.properties
      when: on_success


.cmake_configure:
  script:
    # The toolchain file expression has to be quoted when using Powershell
    # See https://gitlab.kitware.com/cmake/cmake/-/issues/23109
    - cmake "-DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake"
      "-DCMAKE_BUILD_TYPE=$BUILD_TYPE"
      -DBUILD_TESTS=ON -DBUILD_BENCHMARKS=ON
      -DBUILD_SHARED_LIBS=$BUILD_SHARED_LIBS -DBUILD_USE_IPO_LTO_IF_AVAILABLE=OFF
      -DWARNING_AS_ERROR=ON
      -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE
      ..


.build_linux:
  stage: build
  rules:
    - !reference [.buildAndTest_rules, rules]
  before_script:
    - !reference [.setup_conan, script]
  script:
    - mkdir build
    - cd build
    - conan install --profile:build $CONAN_PROFILE_BUILD --profile:host $CONAN_PROFILE_HOST -s build_type=$BUILD_TYPE -o shared=$BUILD_SHARED_LIBS ..
    - source conanbuild.sh || true  # Workaround to https://gitlab.com/gitlab-org/ci-cd/pipeline-authoring-stack-rank/-/issues/1
    - !reference [.cmake_configure, script]
    - cmake --build . --config $BUILD_TYPE -j4
    - source deactivate_conanbuild.sh
  artifacts:
    expire_in: 1 day
    paths:
      - build


.test_base:
  stage: test
  rules:
    - !reference [.buildAndTest_rules, rules]
  before_script:
    - !reference [.setup_conan, script]
  script:
    - cd build
    - conan install --profile:build $CONAN_PROFILE_BUILD --profile:host $CONAN_PROFILE_HOST -s build_type=$BUILD_TYPE -o shared=$BUILD_SHARED_LIBS ..
    - ctest --output-on-failure -C $BUILD_TYPE
  artifacts:
    when: on_failure
    expire_in: 1 week
    paths:
      - build

.test_linux:
  extends:
    - .test_base
